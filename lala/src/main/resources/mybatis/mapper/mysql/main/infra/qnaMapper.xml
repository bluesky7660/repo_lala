<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lalaping.qna.QnaDao">

	<!-- qna질문 영역 -->
	<resultMap type="com.lalaping.qna.QnaRequestDto" id="RequestResultMapObj"></resultMap>
	<sql id="ReqSelectCommon">
		FROM
			qnaRequests a
			join userMember b on b.umSeq = a.userMember_umSeq
		where 1=1
			<if test="shDelNy != null and !shDelNy.equals('')">AND a.qrDelNy = #{shDelNy}</if>
			<if test="shQrStatus != null and !shQrStatus.equals('')">AND a.qrStatus = #{shQrStatus}</if>
			<if test="shQnaType != null and !shQnaType.equals('')">AND a.qrType = #{shQnaType}</if>
			<if test="shValue != null and !shValue.equals('')">
				<choose>
					<when test="shOption == null">
						AND(
							a.qrSeq Like CONCAT('%',#{shValue},'%')
							OR a.qrTitle Like CONCAT('%',#{shValue},'%')
							OR b.umName Like CONCAT('%',#{shValue},'%')
							
						)
					</when>
					<when test="shOption == 1">AND a.qrSeq = #{shValue}</when>
					<when test="shOption == 2">AND a.qrTitle Like CONCAT('%',#{shValue},'%')</when>
					<when test="shOption == 3">AND b.umName Like CONCAT('%',#{shValue},'%')</when>
				</choose>
			</if>
			<choose>
				<when test="shOptionDate == 1"> AND a.cdRegDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
				<when test="shOptionDate == 2"> AND a.cdModDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
			</choose>
			
	</sql>
	<select id="selectListRequest" resultMap="RequestResultMapObj">
		<include refid="base.selectListUpperForMysql"/>
		SELECT
			a.qrSeq
			,a.qrTitle
			,a.qrContent
			,a.qrDelNy
			,a.qrRegDate
			,a.qrType
			,b.umName
		<include refid="ReqSelectCommon"/>
		ORDER BY a.qrSeq DESC
		<include refid="base.selectListLowerForMysql"/>
	</select>
	<select id="listCountR" resultType="int">
		SELECT COUNT(*) 
		<include refid="ReqSelectCommon"/>
	</select>
	<select id="selectOneRequest" resultMap="RequestResultMapObj">
		SELECT
			a.qrSeq,
			a.qrTitle,
			a.qrContent,
			a.qrType,
			a.userMember_umSeq,
			b.umName
		FROM
			qnaRequests a
			join userMember b on b.umSeq = a.userMember_umSeq
		WHERE 1=1
		AND a.qrSeq = #{qrSeq}
	</select>
	<insert id="insertRequest">
        INSERT INTO qnaRequests (
	        qrTitle
			,qrContent
			,qrType
			,userMember_umSeq
			,qrDelNy
			,qrRegDate
			
        ) VALUES (
	        #{qrTitle}
	        ,#{qrContent}
	        ,#{qrType}
	        ,#{userMember_umSeq}
	        ,0
	        ,now()
        )
        <selectKey resultType="String" keyProperty="qrSeq" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
    </insert>
	
	<!-- qna답변 영역 -->
	<resultMap type="com.lalaping.qna.QnaAnswerDto" id="AnswerResultMapObj"></resultMap>
	<sql id="AnsSelectCommon">
		FROM
			qnaAnswers a
			join staffMember b on b.sfSeq = a.staffMember_sfSeq
			join qnaRequests c on c.qrSeq = a.qnaRequests_qrSeq
		where 1=1
			AND a.qaDelNy = 0
	</sql>
	<select id="selectListAnswer" resultMap="AnswerResultMapObj">
		<include refid="base.selectListUpperForMysql"/>
		SELECT
			a.qaSeq
			,a.qaContent
			,a.qaDelNy
			,a.qaRegDate
			,a.qaModDate
			,a.qnaRequests_qrSeq
			,b.sfName
			,c.qrType
			,c.qrTitle
		<include refid="AnsSelectCommon"/>
		ORDER BY a.qaSeq DESC
		<include refid="base.selectListLowerForMysql"/>
	</select>
	<select id="listCountA" resultType="int">
		SELECT COUNT(*) 
		<include refid="AnsSelectCommon"/>
	</select>
	<select id="selectOneAnswer" resultMap="AnswerResultMapObj">
		SELECT
			a.qaSeq,
			a.qaContent,
			a.staffMember_sfSeq,
			a.qnaRequests_qrSeq,
			b.qrTitle,
			b.qrContent,
			b.qrType,
			c.sfName,
			d.umName
		FROM
			qnaAnswers a
			join qnaRequests b on b.qrSeq = a.qnaRequests_qrSeq
			join staffMember c on c.sfSeq = a.staffMember_sfSeq
			join userMember d on d.umSeq = b.userMember_umSeq
		WHERE 1=1
		AND a.qaSeq = #{qaSeq}
	</select>
	<insert id="insertAnswer">
        INSERT INTO qnaAnswers (
			qaContent
			,staffMember_sfSeq
			,qnaRequests_qrSeq
			,qaDelNy
			,qaRegDate
			,qaModDate
			
        ) VALUES (
	        #{qaContent}
	        ,#{staffMember_sfSeq}
	        ,#{qnaRequests_qrSeq}
	        ,0
	        ,now()
	        ,now()
        )
        <selectKey resultType="String" keyProperty="qaSeq" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
    </insert>
    <update id="updateAnswer">
    	UPDATE qnaAnswers 
		set
			qaContent = #{qaContent},
		    qaModDate = now()
		WHERE 1=1
			AND qaSeq = #{qaSeq}
	</update>
</mapper>